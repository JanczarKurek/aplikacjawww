# Generated by Django 3.1.4 on 2021-01-02 16:13
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations


def forwards_func(apps, schema_editor):
    UserInfo = apps.get_model('wwwapp', 'UserInfo')
    Form = apps.get_model('wwwforms', 'Form')
    FormQuestion = apps.get_model('wwwforms', 'FormQuestion')
    FormQuestionAnswer = apps.get_model('wwwforms', 'FormQuestionAnswer')

    if not UserInfo.objects.all().exists():
        return

    try:
        form_userinfo = Form.objects.get(name='user_info')
    except Form.DoesNotExist:
        form_userinfo = Form.objects.create(name='user_info', title='Informacje wyjazdowe')
    question_pesel = form_userinfo.questions.create(title='PESEL', data_type='P', is_required=True, order=0)
    question_address = form_userinfo.questions.create(title='Adres zameldowania', data_type='t', is_required=True, order=1)
    question_phone = form_userinfo.questions.create(title='Numer telefonu', data_type='s', is_required=True, order=2)
    question_start_date = form_userinfo.questions.create(title='Data przyjazdu :-)', data_type='d', is_required=True, order=3)
    question_end_date = form_userinfo.questions.create(title='Data wyjazdu :-(', data_type='d', is_required=True, order=4)
    question_tshirt_size = form_userinfo.questions.create(title='Rozmiar koszulki', data_type='s', is_required=False, order=5)
    question_comments = form_userinfo.questions.create(title='Dodatkowe uwagi (np. wegetarianin, uczulony na X, ale też inne)', data_type='t', is_required=False, order=6)
    form_userinfo.arrival_date = question_start_date
    form_userinfo.departure_date = question_end_date
    form_userinfo.save()

    for userinfo in UserInfo.objects.all():
        user = userinfo.user_profile.user
        if userinfo.pesel:
            question_pesel.answers.create(user=user, value_string=userinfo.pesel)
        if userinfo.address:
            question_address.answers.create(user=user, value_string=userinfo.address)
        if userinfo.phone:
            question_phone.answers.create(user=user, value_string=userinfo.phone)
        if userinfo.start_date:
            question_start_date.answers.create(user=user, value_date=userinfo.start_date)
        if userinfo.end_date:
            question_end_date.answers.create(user=user, value_date=userinfo.end_date)
        if userinfo.tshirt_size and userinfo.tshirt_size != 'no_idea':
            question_tshirt_size.answers.create(user=user, value_string=userinfo.tshirt_size)
        if userinfo.comments:
            question_comments.answers.create(user=user, value_string=userinfo.comments)

    UserInfo.objects.all().delete()


def get_or_none(qs):
    try:
        return qs.get()
    except ObjectDoesNotExist:
        return None


def reverse_func(apps, schema_editor):
    UserProfile = apps.get_model('wwwapp', 'UserProfile')
    UserInfo = apps.get_model('wwwapp', 'UserInfo')
    Form = apps.get_model('wwwforms', 'Form')
    FormQuestion = apps.get_model('wwwforms', 'FormQuestion')
    FormQuestionAnswer = apps.get_model('wwwforms', 'FormQuestionAnswer')

    form_userinfo = None
    question_pesel = None
    question_address = None
    question_phone = None
    question_start_date = None
    question_end_date = None
    question_tshirt_size = None
    question_comments = None
    try:
        form_userinfo = Form.objects.get(name='user_info')
        question_pesel = get_or_none(form_userinfo.questions.filter(title='PESEL', data_type='P'))
        question_address = get_or_none(form_userinfo.questions.filter(title='Adres zameldowania', data_type='t'))
        question_phone = get_or_none(form_userinfo.questions.filter(title='Numer telefonu', data_type='s'))
        question_start_date = get_or_none(form_userinfo.questions.filter(title='Data przyjazdu :-)', data_type='d'))
        question_end_date = get_or_none(form_userinfo.questions.filter(title='Data wyjazdu :-(', data_type='d'))
        question_tshirt_size = get_or_none(form_userinfo.questions.filter(title='Rozmiar koszulki', data_type='s'))
        question_comments = get_or_none(form_userinfo.questions.filter(title='Dodatkowe uwagi (np. wegetarianin, uczulony na X, ale też inne)', data_type='t'))
    except Form.DoesNotExist:
        pass

    for profile in UserProfile.objects.all():
        answers = {}
        if form_userinfo:
            for answer in FormQuestionAnswer.objects.filter(user=profile.user, question__form=form_userinfo).all():
                assert answer.question
                answers[answer.question] = answer
        userinfo = UserInfo(user_profile=profile)
        userinfo.pesel = answers[question_pesel].value_string if question_pesel in answers else ''
        userinfo.address = answers[question_address].value_string if question_address in answers else ''
        userinfo.phone = answers[question_phone].value_string if question_phone in answers else ''
        userinfo.start_date = answers[question_start_date].value_date if question_start_date in answers else None
        userinfo.end_date = answers[question_end_date].value_date if question_end_date in answers else None
        userinfo.tshirt_size = answers[question_tshirt_size].value_string if question_tshirt_size in answers else 'no_idea'
        userinfo.comments = answers[question_comments].value_string if question_comments in answers else ''
        userinfo.save()

    if question_pesel:
        question_pesel.delete()
    if question_address:
        question_address.delete()
    if question_phone:
        question_phone.delete()
    if question_start_date:
        question_start_date.delete()
    if question_end_date:
        question_end_date.delete()
    if question_tshirt_size:
        question_tshirt_size.delete()
    if question_comments:
        question_comments.delete()
    if form_userinfo.questions.count() == 0:
        form_userinfo.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('wwwapp', '0068_workshop_year'),
        ('wwwforms', '0003_add_see_results_permission'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func)
    ]
